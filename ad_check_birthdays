<?php
/*
Name:         AD DateTrigger for FluentCRM
Description:  FluentCRM as a WordPress CRM lacks a date trigger for automation. This function determines if 
              today is a date that should trigger an automation in FluentCRM and then adds a Tag or List to
              the contact. This can then be used to start an automation in FluentCRM.
              The function hooks into the WP-cron because it is not time critical.
              For the time being it should run during night or a time when only few users are active on the 
              site to avoid any performance issues. This planned to improve in a future version.
              It is meant to run via Advanced Scripts/Scripts Organizer/Code Snippet or functions.php. It is 
              not a plugin.
Author:       <a href="https://www.littlebig.co/">André Daus</a>
Project:      Advanced Scripts: Provide DateTrigger for FluentCRM
Version:      0.1.1
Plugin URI:   https://github.com/andredaus/FluentCRM-DateTrigger/
Copyright:    © 2022, André Daus

Version History:
Date		Version		Description
--------------------------------------------------------------------------------------------------------------
2021-12-26	0.0.1		Changes:
				- Initial version
				- Used for birthday greetings
				Fixes:
				- N/A
						
2022-01-05  	0.1.0		Changes:
				- Adds a param for triggering around the birthday. Set it to +x days after or -x days 
				  before the birthday. Default is 0 (on the brithday)
				Fixes:
				- Small typo in a comment
				
2022-10-31  	0.1.1		Changes:
				- Extend description for other fields than just birthday. See comments in code!
				Fixes:
				- Small typo in a version
            
*/
if ( ! wp_next_scheduled( 'ad_check_birthdays' ) ) {
    // Set WP-Cron to run at 2:00am GMT every day
    $scheduletime = new DateTime(date('Y')."-".date('m')."-".date('d')." 02:00 GMT"); 
    $scheduletime->modify('+1 day');
    wp_schedule_event( strtotime($scheduletime->format('Y-m-d H:i:s')), 'daily', 'ad_check_birthdays' );
}

//Create a hook for WP-Cron
add_action( 'ad_check_birthdays', 'ad_check_birthdays' );

function ad_check_birthdays() {
    $contactApi = FluentCrmApi('contacts');
    
    // Only consider Contacts that are on the birthday list
    $listIds = [6]; // Birthday list ID
    $searchResult = $contactApi->getInstance()->filterByLists($listIds)->get();
    
    // If you want to add the tag before or after the birthday set the following variable to the number of days before (negative values) or after (positive values) the date.
    // e.g. -10 means ten days before each birthday the tag will be set.
    $days_around_birthday = 0;
    $reference_date = time() + ($days_around_birthday * 24 * 60 * 60);
    
    foreach ($searchResult as $contact) {
        // Only consider contacts that have a full set of data (birthday, first name, last name, email)
	// For other dates than birthday use the appropriate field from contact. date_parse($contact->date_of_birth) refers to the original birthday field (two times, one for day and one for mointh!). But it work for any other field as well. Just change it to the appropriate one.
	// Firther, if you don't want to rely on a full set of data (first and last name), you can remove them from the query. Be aware that you won't be able to use those in you brithday email, if they do not exist!
	
        if (date_parse($contact->date_of_birth)[month] == date('m',$reference_date) && date_parse($contact->date_of_birth)[day] == date('d',$reference_date) && $contact->first_name != "" && $contact-last_name != "" && $contact->email != "") {
            // Set Tag to 'Happy Birthday!'. That is the trigger for the the automation. The automation kicks in when this Tag is assigned. Can also be a List.
            $tagIds = [6];
            $contact->attachTags($tagIds);
        }
    }
}

?>
